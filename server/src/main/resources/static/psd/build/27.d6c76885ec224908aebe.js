(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{106:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"extManager",(function(){return extManager}));var psdetch_state__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),dexie__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(158),psdetch_utils_googleTrack__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(6);const key=[76,89,116,116,56,108,85,102,70,111,37,106,75,81,120,35];class ExtManager{constructor(){this.db=new dexie__WEBPACK_IMPORTED_MODULE_1__.a("psdetch-ext"),this.db.version(2).stores({extensions:"++id, name"})}async loadNativeExtension(e){const t=new((await __webpack_require__.e(26).then(__webpack_require__.t.bind(null,201,7))).ModeOfOperation.ctr)(key);return new Promise((n,a)=>{const _=new FileReader;_.onloadend=()=>{const e=_.result,n=new Uint8Array(e),a=t.decrypt(n);this.loadJSExtension(new Blob([a]))},_.readAsArrayBuffer(e)})}async loadJSExtension(file){return new Promise((res,rej)=>{const fr=new FileReader;fr.onloadend=()=>{const script=fr.result;eval(script)},fr.readAsText(file)})}get table(){return this.db.table("extensions")}async loadExtension(e){const t=await this.table.where({name:e}).first();if(t){const e=t.data;e&&(e.name.match(/\.ext$/)?this.loadNativeExtension(e):this.loadJSExtension(e))}}async initExtension(e){const t=e.default;t.init?t.init(psdetch_state__WEBPACK_IMPORTED_MODULE_0__.b):console.log("Not an extension")}async listExtensions(){const e=await this.table.orderBy("name").primaryKeys(),t=await this.table.orderBy("name").keys(),n=[];for(let a=0;a<e.length;a++)n.push({id:e[a],name:t[a].toString()});return n}async loadAllExtensions(){const e=await this.table.orderBy("name").keys();for(const t of e)await this.loadExtension(t.toString())}async clearTable(){return this.table.clear()}async addExtension(e,t){Object(psdetch_utils_googleTrack__WEBPACK_IMPORTED_MODULE_2__.a)("ext_add_"+e),await this.registerExtension(e,t),await this.loadExtension(e)}async deleteExtension(e){await this.table.delete(e)}async registerExtension(e,t){await this.table.add({name:e,data:t})}}const extManager=new ExtManager;window.extManager={initExtension:extManager.initExtension}}}]);